spring.application.name=auth-server
debug=false

# Disable Docker Compose
spring.docker.compose.enabled=false

#Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.show-sql=false

# Connection pool configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Flyway configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migrations
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true

# JWT configuration
security.jwt.access-token-security-key=${SECURITY_JWT_ACCESS_TOKEN_SECURITY_KEY}
security.jwt.access-token-expiration-time=${SECURITY_JWT_ACCESS_TOKEN_EXPIRATION_TIME}
security.jwt.refresh-token-security-key=${SECURITY_JWT_REFRESH_TOKEN_SECURITY_KEY}
security.jwt.refresh-token-expiration-time=${SECURITY_JWT_REFRESH_TOKEN_EXPIRATION_TIME}

# Actuator configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true
management.health.diskspace.enabled=true

# Logging configuration
logging.level.root=INFO
logging.level.me.sebastijanzindl.authserver=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.file.name=/app/logs/auth-server.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%na


# Server configuration
server.port=${SERVER_PORT:8080}
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=10
server.tomcat.connection-timeout=20000

# Security configuration
spring.security.user.name=${ADMIN_USERNAME}
spring.security.user.password=${ADMIN_PASSWORD}

# CORS configuration for local network
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true