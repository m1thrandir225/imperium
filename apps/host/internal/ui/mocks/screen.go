// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/m1thrandir225/imperium/apps/host/internal/ui (interfaces: Screen)
//
// Generated by this command:
//
//	mockgen -package mockui -destination internal/ui/mocks/screen.go github.com/m1thrandir225/imperium/apps/host/internal/ui Screen
//

// Package mockui is a generated GoMock package.
package mockui

import (
	reflect "reflect"

	fyne "fyne.io/fyne/v2"
	gomock "go.uber.org/mock/gomock"
)

// MockScreen is a mock of Screen interface.
type MockScreen struct {
	ctrl     *gomock.Controller
	recorder *MockScreenMockRecorder
	isgomock struct{}
}

// MockScreenMockRecorder is the mock recorder for MockScreen.
type MockScreenMockRecorder struct {
	mock *MockScreen
}

// NewMockScreen creates a new mock instance.
func NewMockScreen(ctrl *gomock.Controller) *MockScreen {
	mock := &MockScreen{ctrl: ctrl}
	mock.recorder = &MockScreenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScreen) EXPECT() *MockScreenMockRecorder {
	return m.recorder
}

// Name mocks base method.
func (m *MockScreen) Name() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

// Name indicates an expected call of Name.
func (mr *MockScreenMockRecorder) Name() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Name", reflect.TypeOf((*MockScreen)(nil).Name))
}

// Render mocks base method.
func (m *MockScreen) Render(w fyne.Window) fyne.CanvasObject {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Render", w)
	ret0, _ := ret[0].(fyne.CanvasObject)
	return ret0
}

// Render indicates an expected call of Render.
func (mr *MockScreenMockRecorder) Render(w any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Render", reflect.TypeOf((*MockScreen)(nil).Render), w)
}
