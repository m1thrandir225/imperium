package input

var vkToName = map[uint16]string{
	0x41: "a", 0x42: "b", 0x43: "c", 0x44: "d", 0x45: "e", 0x46: "f", 0x47: "g", 0x48: "h",
	0x49: "i", 0x4A: "j", 0x4B: "k", 0x4C: "l", 0x4D: "m", 0x4E: "n", 0x4F: "o", 0x50: "p",
	0x51: "q", 0x52: "r", 0x53: "s", 0x54: "t", 0x55: "u", 0x56: "v", 0x57: "w", 0x58: "x",
	0x59: "y", 0x5A: "z",
	0x30: "0", 0x31: "1", 0x32: "2", 0x33: "3", 0x34: "4", 0x35: "5", 0x36: "6", 0x37: "7",
	0x38: "8", 0x39: "9",
	0x20: "space", 0x0D: "enter", 0x1B: "escape", 0x09: "tab", 0x10: "shift", 0x11: "ctrl",
	0x12: "alt", 0x25: "left", 0x26: "up", 0x27: "right", 0x28: "down",
	0x21: "insert", 0x22: "delete", 0x23: "home", 0x24: "end", 0x2D: "subtract", 0x2E: "add",
	0x2F: "divide", 0x3A: "semicolon", 0x3B: "equals", 0x3C: "comma", 0x3D: "minus", 0x3E: "period",
	0x3F: "slash", 0x40: "grave", 0x5B: "openbracket", 0x5C: "backslash", 0x5D: "closebracket",
	0x5E: "caret", 0x5F: "underscore", 0x60: "backquote", 0x61: "A", 0x62: "B", 0x63: "C",
	0x64: "D", 0x65: "E", 0x66: "F", 0x67: "G", 0x68: "H", 0x69: "I", 0x6A: "J", 0x6B: "K",
	0x6C: "L", 0x6D: "M", 0x6E: "N", 0x6F: "O", 0x70: "P", 0x71: "Q", 0x72: "R", 0x73: "S",
	0x74: "T", 0x75: "U", 0x76: "V", 0x77: "W", 0x78: "X", 0x79: "Y", 0x7A: "Z",
}

var keyMap = map[string]uint16{
	"a": 0x41, "b": 0x42, "c": 0x43, "d": 0x44, "e": 0x45, "f": 0x46, "g": 0x47, "h": 0x48,
	"i": 0x49, "j": 0x4A, "k": 0x4B, "l": 0x4C, "m": 0x4D, "n": 0x4E, "o": 0x4F, "p": 0x50,
	"q": 0x51, "r": 0x52, "s": 0x53, "t": 0x54, "u": 0x55, "v": 0x56, "w": 0x57, "x": 0x58,
	"y": 0x59, "z": 0x5A,
	"0": 0x30, "1": 0x31, "2": 0x32, "3": 0x33, "4": 0x34, "5": 0x35, "6": 0x36, "7": 0x37, "8": 0x38, "9": 0x39,
	" ":     0x20, // Space character
	"":      0x20, // Empty string (fallback for space)
	"space": 0x20, // Keep the existing space mapping too
	"enter": 0x0D, "escape": 0x1B, "tab": 0x09, "shift": 0x10, "ctrl": 0x11, "alt": 0x12,
	"left": 0x25, "up": 0x26, "right": 0x27, "down": 0x28,
	"arrowleft": 0x25, "arrowup": 0x26, "arrowright": 0x27, "arrowdown": 0x28,
	"meta": 0x20,
}
