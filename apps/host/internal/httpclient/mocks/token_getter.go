// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/m1thrandir225/imperium/apps/host/internal/httpclient (interfaces: TokenGetter)
//
// Generated by this command:
//
//	mockgen -package mockhttpclient -destination internal/httpclient/mocks/token_getter.go github.com/m1thrandir225/imperium/apps/host/internal/httpclient TokenGetter
//

// Package mockhttpclient is a generated GoMock package.
package mockhttpclient

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockTokenGetter is a mock of TokenGetter interface.
type MockTokenGetter struct {
	ctrl     *gomock.Controller
	recorder *MockTokenGetterMockRecorder
	isgomock struct{}
}

// MockTokenGetterMockRecorder is the mock recorder for MockTokenGetter.
type MockTokenGetterMockRecorder struct {
	mock *MockTokenGetter
}

// NewMockTokenGetter creates a new mock instance.
func NewMockTokenGetter(ctrl *gomock.Controller) *MockTokenGetter {
	mock := &MockTokenGetter{ctrl: ctrl}
	mock.recorder = &MockTokenGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenGetter) EXPECT() *MockTokenGetterMockRecorder {
	return m.recorder
}

// GetAccessToken mocks base method.
func (m *MockTokenGetter) GetAccessToken() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccessToken")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAccessToken indicates an expected call of GetAccessToken.
func (mr *MockTokenGetterMockRecorder) GetAccessToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccessToken", reflect.TypeOf((*MockTokenGetter)(nil).GetAccessToken))
}

// GetAccessTokenExpiresAt mocks base method.
func (m *MockTokenGetter) GetAccessTokenExpiresAt() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccessTokenExpiresAt")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetAccessTokenExpiresAt indicates an expected call of GetAccessTokenExpiresAt.
func (mr *MockTokenGetterMockRecorder) GetAccessTokenExpiresAt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccessTokenExpiresAt", reflect.TypeOf((*MockTokenGetter)(nil).GetAccessTokenExpiresAt))
}

// IsAccessTokenExpired mocks base method.
func (m *MockTokenGetter) IsAccessTokenExpired() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsAccessTokenExpired")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsAccessTokenExpired indicates an expected call of IsAccessTokenExpired.
func (mr *MockTokenGetterMockRecorder) IsAccessTokenExpired() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsAccessTokenExpired", reflect.TypeOf((*MockTokenGetter)(nil).IsAccessTokenExpired))
}
