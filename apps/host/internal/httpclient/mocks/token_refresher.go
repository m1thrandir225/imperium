// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/m1thrandir225/imperium/apps/host/internal/httpclient (interfaces: TokenRefresher)
//
// Generated by this command:
//
//	mockgen -package mockhttpclient -destination internal/httpclient/mocks/token_refresher.go github.com/m1thrandir225/imperium/apps/host/internal/httpclient TokenRefresher
//

// Package mockhttpclient is a generated GoMock package.
package mockhttpclient

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTokenRefresher is a mock of TokenRefresher interface.
type MockTokenRefresher struct {
	ctrl     *gomock.Controller
	recorder *MockTokenRefresherMockRecorder
	isgomock struct{}
}

// MockTokenRefresherMockRecorder is the mock recorder for MockTokenRefresher.
type MockTokenRefresherMockRecorder struct {
	mock *MockTokenRefresher
}

// NewMockTokenRefresher creates a new mock instance.
func NewMockTokenRefresher(ctrl *gomock.Controller) *MockTokenRefresher {
	mock := &MockTokenRefresher{ctrl: ctrl}
	mock.recorder = &MockTokenRefresherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenRefresher) EXPECT() *MockTokenRefresherMockRecorder {
	return m.recorder
}

// RefreshToken mocks base method.
func (m *MockTokenRefresher) RefreshToken(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RefreshToken", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// RefreshToken indicates an expected call of RefreshToken.
func (mr *MockTokenRefresherMockRecorder) RefreshToken(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshToken", reflect.TypeOf((*MockTokenRefresher)(nil).RefreshToken), ctx)
}
