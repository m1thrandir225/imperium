// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/m1thrandir225/imperium/apps/host/internal/tokenrefresher (interfaces: Refresher)
//
// Generated by this command:
//
//	mockgen -package mocktoken_refresher -destination internal/tokenrefresher/mocks/refresher.go github.com/m1thrandir225/imperium/apps/host/internal/tokenrefresher Refresher
//

// Package mocktoken_refresher is a generated GoMock package.
package mocktoken_refresher

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRefresher is a mock of Refresher interface.
type MockRefresher struct {
	ctrl     *gomock.Controller
	recorder *MockRefresherMockRecorder
	isgomock struct{}
}

// MockRefresherMockRecorder is the mock recorder for MockRefresher.
type MockRefresherMockRecorder struct {
	mock *MockRefresher
}

// NewMockRefresher creates a new mock instance.
func NewMockRefresher(ctrl *gomock.Controller) *MockRefresher {
	mock := &MockRefresher{ctrl: ctrl}
	mock.recorder = &MockRefresherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRefresher) EXPECT() *MockRefresherMockRecorder {
	return m.recorder
}

// Start mocks base method.
func (m *MockRefresher) Start(ctx context.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Start", ctx)
}

// Start indicates an expected call of Start.
func (mr *MockRefresherMockRecorder) Start(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockRefresher)(nil).Start), ctx)
}

// Stop mocks base method.
func (m *MockRefresher) Stop() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Stop")
}

// Stop indicates an expected call of Stop.
func (mr *MockRefresherMockRecorder) Stop() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stop", reflect.TypeOf((*MockRefresher)(nil).Stop))
}
