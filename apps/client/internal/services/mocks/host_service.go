// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/m1thrandir225/imperium/apps/client/internal/services/ (interfaces: HostService)
//
// Generated by this command:
//
//	mockgen -package mockservices -destination internal/services/mocks/host_service.go github.com/m1thrandir225/imperium/apps/client/internal/services/ HostService
//

// Package mockservices is a generated GoMock package.
package mockservices

import (
	context "context"
	reflect "reflect"

	models "github.com/m1thrandir225/imperium/apps/client/internal/models"
	gomock "go.uber.org/mock/gomock"
)

// MockHostService is a mock of HostService interface.
type MockHostService struct {
	ctrl     *gomock.Controller
	recorder *MockHostServiceMockRecorder
	isgomock struct{}
}

// MockHostServiceMockRecorder is the mock recorder for MockHostService.
type MockHostServiceMockRecorder struct {
	mock *MockHostService
}

// NewMockHostService creates a new mock instance.
func NewMockHostService(ctrl *gomock.Controller) *MockHostService {
	mock := &MockHostService{ctrl: ctrl}
	mock.recorder = &MockHostServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHostService) EXPECT() *MockHostServiceMockRecorder {
	return m.recorder
}

// GetHost mocks base method.
func (m *MockHostService) GetHost(ctx context.Context, hostID, token string) (*models.Host, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHost", ctx, hostID, token)
	ret0, _ := ret[0].(*models.Host)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHost indicates an expected call of GetHost.
func (mr *MockHostServiceMockRecorder) GetHost(ctx, hostID, token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHost", reflect.TypeOf((*MockHostService)(nil).GetHost), ctx, hostID, token)
}

// GetHostPrograms mocks base method.
func (m *MockHostService) GetHostPrograms(ctx context.Context, hostID, token string) ([]models.Program, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHostPrograms", ctx, hostID, token)
	ret0, _ := ret[0].([]models.Program)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHostPrograms indicates an expected call of GetHostPrograms.
func (mr *MockHostServiceMockRecorder) GetHostPrograms(ctx, hostID, token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHostPrograms", reflect.TypeOf((*MockHostService)(nil).GetHostPrograms), ctx, hostID, token)
}

// GetUserHosts mocks base method.
func (m *MockHostService) GetUserHosts(ctx context.Context, token string) ([]models.SimpleHost, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserHosts", ctx, token)
	ret0, _ := ret[0].([]models.SimpleHost)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserHosts indicates an expected call of GetUserHosts.
func (mr *MockHostServiceMockRecorder) GetUserHosts(ctx, token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserHosts", reflect.TypeOf((*MockHostService)(nil).GetUserHosts), ctx, token)
}

// UpdateBaseURL mocks base method.
func (m *MockHostService) UpdateBaseURL(url string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateBaseURL", url)
}

// UpdateBaseURL indicates an expected call of UpdateBaseURL.
func (mr *MockHostServiceMockRecorder) UpdateBaseURL(url any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateBaseURL", reflect.TypeOf((*MockHostService)(nil).UpdateBaseURL), url)
}
