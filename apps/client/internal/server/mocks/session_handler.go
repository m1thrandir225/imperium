// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/m1thrandir225/imperium/apps/client/internal/server/ (interfaces: SessionHandler)
//
// Generated by this command:
//
//	mockgen -package mockserver -destination internal/server/mocks/session_handler.go github.com/m1thrandir225/imperium/apps/client/internal/server/ SessionHandler
//

// Package mockserver is a generated GoMock package.
package mockserver

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockSessionHandler is a mock of SessionHandler interface.
type MockSessionHandler struct {
	ctrl     *gomock.Controller
	recorder *MockSessionHandlerMockRecorder
	isgomock struct{}
}

// MockSessionHandlerMockRecorder is the mock recorder for MockSessionHandler.
type MockSessionHandlerMockRecorder struct {
	mock *MockSessionHandler
}

// NewMockSessionHandler creates a new mock instance.
func NewMockSessionHandler(ctrl *gomock.Controller) *MockSessionHandler {
	mock := &MockSessionHandler{ctrl: ctrl}
	mock.recorder = &MockSessionHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionHandler) EXPECT() *MockSessionHandlerMockRecorder {
	return m.recorder
}

// CancelSession mocks base method.
func (m *MockSessionHandler) CancelSession(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CancelSession", ctx)
}

// CancelSession indicates an expected call of CancelSession.
func (mr *MockSessionHandlerMockRecorder) CancelSession(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CancelSession", reflect.TypeOf((*MockSessionHandler)(nil).CancelSession), ctx)
}

// CreateSession mocks base method.
func (m *MockSessionHandler) CreateSession(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateSession", ctx)
}

// CreateSession indicates an expected call of CreateSession.
func (mr *MockSessionHandlerMockRecorder) CreateSession(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSession", reflect.TypeOf((*MockSessionHandler)(nil).CreateSession), ctx)
}

// EndSession mocks base method.
func (m *MockSessionHandler) EndSession(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "EndSession", ctx)
}

// EndSession indicates an expected call of EndSession.
func (mr *MockSessionHandlerMockRecorder) EndSession(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EndSession", reflect.TypeOf((*MockSessionHandler)(nil).EndSession), ctx)
}

// GetSession mocks base method.
func (m *MockSessionHandler) GetSession(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetSession", ctx)
}

// GetSession indicates an expected call of GetSession.
func (mr *MockSessionHandlerMockRecorder) GetSession(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSession", reflect.TypeOf((*MockSessionHandler)(nil).GetSession), ctx)
}

// StartSession mocks base method.
func (m *MockSessionHandler) StartSession(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "StartSession", ctx)
}

// StartSession indicates an expected call of StartSession.
func (mr *MockSessionHandlerMockRecorder) StartSession(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartSession", reflect.TypeOf((*MockSessionHandler)(nil).StartSession), ctx)
}
