// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/m1thrandir225/imperium/apps/client/internal/server/ (interfaces: ClientHandler)
//
// Generated by this command:
//
//	mockgen -package mockserver -destination internal/server/mocks/client_handler.go github.com/m1thrandir225/imperium/apps/client/internal/server/ ClientHandler
//

// Package mockserver is a generated GoMock package.
package mockserver

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockClientHandler is a mock of ClientHandler interface.
type MockClientHandler struct {
	ctrl     *gomock.Controller
	recorder *MockClientHandlerMockRecorder
	isgomock struct{}
}

// MockClientHandlerMockRecorder is the mock recorder for MockClientHandler.
type MockClientHandlerMockRecorder struct {
	mock *MockClientHandler
}

// NewMockClientHandler creates a new mock instance.
func NewMockClientHandler(ctrl *gomock.Controller) *MockClientHandler {
	mock := &MockClientHandler{ctrl: ctrl}
	mock.recorder = &MockClientHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientHandler) EXPECT() *MockClientHandlerMockRecorder {
	return m.recorder
}

// GetClientInfo mocks base method.
func (m *MockClientHandler) GetClientInfo(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetClientInfo", ctx)
}

// GetClientInfo indicates an expected call of GetClientInfo.
func (mr *MockClientHandlerMockRecorder) GetClientInfo(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClientInfo", reflect.TypeOf((*MockClientHandler)(nil).GetClientInfo), ctx)
}
