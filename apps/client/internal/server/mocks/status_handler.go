// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/m1thrandir225/imperium/apps/client/internal/server/ (interfaces: StatusHandler)
//
// Generated by this command:
//
//	mockgen -package mockserver -destination internal/server/mocks/status_handler.go github.com/m1thrandir225/imperium/apps/client/internal/server/ StatusHandler
//

// Package mockserver is a generated GoMock package.
package mockserver

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockStatusHandler is a mock of StatusHandler interface.
type MockStatusHandler struct {
	ctrl     *gomock.Controller
	recorder *MockStatusHandlerMockRecorder
	isgomock struct{}
}

// MockStatusHandlerMockRecorder is the mock recorder for MockStatusHandler.
type MockStatusHandlerMockRecorder struct {
	mock *MockStatusHandler
}

// NewMockStatusHandler creates a new mock instance.
func NewMockStatusHandler(ctrl *gomock.Controller) *MockStatusHandler {
	mock := &MockStatusHandler{ctrl: ctrl}
	mock.recorder = &MockStatusHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatusHandler) EXPECT() *MockStatusHandlerMockRecorder {
	return m.recorder
}

// GetStatus mocks base method.
func (m *MockStatusHandler) GetStatus(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetStatus", ctx)
}

// GetStatus indicates an expected call of GetStatus.
func (mr *MockStatusHandlerMockRecorder) GetStatus(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatus", reflect.TypeOf((*MockStatusHandler)(nil).GetStatus), ctx)
}
